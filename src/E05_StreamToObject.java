import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;

public class E05_StreamToObject {

	/*
	 # Serializable 인터페이스
	 - 해당 객체를 직렬화 가능한 객체로 만든다
	 ※ 직렬화 : 데이터를 이진법으로 변환하는것
	 */
	
	static class Apple implements Serializable {
		
		private static final long serialVersionUID = 1L; // 갈떄 올때 같아야
		
		int size;
		String color;
		String local;
		
		public Apple(int size, String color, String local) {
			this.size = size;
			this.color = color;
			this.local = local;
		}
		
		@Override
		public String toString() {
			return size + "/" + color + "/" + local;
		}
	}
	
	// # ObjectOutputStream/ObjectInputStream을 통해
	//	객체도 Stream으로 지나다닐 수 있다
	
	public static void main(String[] args) {
		
		// AutoClose가 구현된 클래스들은 try-with-resources를 이용할 수 있다
		// try-with-resources를 이용할 수 있다
		try (
			FileOutputStream fout = new FileOutputStream("D:\\java_io\\object.txt");
			BufferedOutputStream bout = new BufferedOutputStream(fout);
			ObjectOutputStream oout = new ObjectOutputStream(bout);
				) {
			oout.writeObject(new Apple(9, "주황색", "대구"));
			oout.writeInt(12345);
			oout.writeObject(new Apple(11, "연두색", "대전"));
			oout.writeObject(new Apple(12, "노란색", "서울"));
			
			System.out.println("객체 쓰기 완료");
		} catch (Exception e) {
			e.printStackTrace();
		}
		try (
			FileInputStream fin = new FileInputStream("D:\\java_io\\object.txt");
			BufferedInputStream bin = new BufferedInputStream(fin);
			ObjectInputStream oin = new ObjectInputStream(bin);
			) {
			// ObjectInputStream의 readObject는
			// 데이터를 Object타입으로 받아오기 때문에
			// 제대로 사용하기 위해서는 다운캐스팅이 필요하다
			System.out.println("파일에서 읽어온 객체");
			System.out.println(oin.readObject());
//			System.out.println(oin.readObject()); // 에러 -> 오브젝트객체아니라서, 순서대로 넣어줘야
			System.out.println(oin.readInt());
			System.out.println(oin.readObject());
			System.out.println(oin.readObject());
			
			
		}	catch (Exception e) {
			e.printStackTrace();
		}
	}

}


















